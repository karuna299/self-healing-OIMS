apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: incident-mgmt
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    # ✅ Tell Prometheus where Alertmanager is
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - 'alertmanager.incident-mgmt.svc.cluster.local:9093'

    # ✅ Load rules file
    rule_files:
      - "/etc/prometheus/alert-rules.yml"

    scrape_configs:
      - job_name: 'incident-app'
        metrics_path: /metrics
        static_configs:
          - targets: ['incident-app-service.incident-mgmt.svc.cluster.local:80']

  alert-rules.yml: |
    groups:
      - name: incident-app-alerts
        rules:
          - alert: IncidentAppDown
            expr: up{job="incident-app"} == 0
            for: 10s
            labels:
              severity: critical
            annotations:
              summary: "Incident App is down"
              description: "No metrics scraped from incident-app for 30s."

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: incident-mgmt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.enable-lifecycle"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: incident-mgmt
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090